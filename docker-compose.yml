version: '3'
services:
  api_gateway:
    build: ./apps/http-api-gateway
    ports:
      - "3000:3000"
    volumes:
      - ./apps/http-api-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - SERVICE_DOMAIN=api_gateway
    networks:
      - app-network
    depends_on:
      - mysql_db
  users_microservice:
    build: ./apps/users-microservice
    volumes:
      - ./apps/users-microservice/src:/usr/src/app/src
    command: npm run start:dev
    networks:
      - app-network
    depends_on:
      - mysql_db
  payments_microservice:
    build: ./apps/payments-microservice
    volumes:
      - ./apps/payments-microservice/src:/usr/src/app/src
    command: npm run start:dev
    networks:
      - app-network
    depends_on:
      - mysql_db
  nats:
    image: nats
    ports:
      - 4222:4222
    environment:
      - NATS_URL=nats://localhost:4222
    networks:
      - app-network
    depends_on:
      - mysql_db
  mysql_db:
    image: mysql
    ports:
      - "3307:3307"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password_123
      - MYSQL_DATABASE=nestjs_db
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=testuser123
      - MYSQL_TCP_PORT=3307
    networks:
      - app-network
    volumes:
      - ./mysql_data:/var/lib/mysql
  frontend_app:
    build: ./apps/frontend
    volumes:
    - ./apps/frontend/src:/usr/src/app/src
    ports:
      - "8080:3000"
    environment:
      - API_BASE_URL=http://api_gateway:3000
    command: npm run start
    networks:
      - app-network
    container_name: frontend

networks:
  app-network:
    driver: bridge